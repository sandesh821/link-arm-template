{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    
    "appServiceName":{
        "type": "string"
      },
      "datafactoryname": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the key vault."
      }
    },
    
    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ]
      
    },
    "enabledForDeployment": {
        "type": "Bool",
        "defaultValue": false,
        "metadata": {
            "description": "description"
        }
    },
    "keysPermissions-AS": {
      "type": "array",
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
      }
    },
    "secretsPermissions-AS": {
      "type": "array",
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, backup, restore, recover, and purge."
      }
    },
    "certificatePermissions-AS": {
      "type": "array",
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Specifies the permissions to certificates in the vault. Valid values are: all,  create, delete, update, deleteissuers, get, getissuers, import, list, listissuers, managecontacts, manageissuers,  recover, backup, restore, setissuers, and purge."
      }
    },
    "keysPermissions-DF": {
      "type": "array",
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
      }
    },
    "secretsPermissions-DF": {
      "type": "array",
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, backup, restore, recover, and purge."
      }
    },
    "certificatePermissions-DF": {
      "type": "array",
      "defaultValue": [
        "list"
      ],
      "metadata": {
        "description": "Specifies the permissions to certificates in the vault. Valid values are: all,  create, delete, update, deleteissuers, get, getissuers, import, list, listissuers, managecontacts, manageissuers,  recover, backup, restore, setissuers, and purge."
      }
    }
    },
    "functions": [],
    "variables": {},
    "resources": [
             // key vault
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enabledForDeployment": "[parameters('enabledForDeployment')]",
        "tenantId": "[subscription().tenantId]",

        "accessPolicies": [
          {
            // manage adentity for app service
            "tenantId": "[subscription().tenantId]",

           "objectId": "[reference(resourceId('Microsoft.Web/sites/', parameters('appServiceName')), '2020-12-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": "[parameters('keysPermissions-AS')]",
              "secrets": "[parameters('secretsPermissions-AS')]",
              "certificates": "[parameters('certificatePermissions-AS')]"
            }
          },
          {
            //manage Identities for Data factory
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.DataFactory/factories', parameters('datafactoryname')), '2018-06-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": "[parameters('keysPermissions-DF')]",
              "secrets": "[parameters('secretsPermissions-DF')]",
              "certificates": "[parameters('certificatePermissions-DF')]"
            }
          }
        
        ],
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"  
        }
      }
    }
    ],
    "outputs": {}
}